<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
      parent="authn.abstract">

    <!-- This is a login flow for external authentication handled outside the webflow engine. -->
    
    <view-state id="ExternalTransfer" view="externalRedirect:#{T(net.shibboleth.idp.authn.ExternalAuthentication).getExternalRedirect(flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.authn.External.externalAuthnPathStrategy').apply(opensamlProfileRequestContext), flowExecutionContext.getKey().toString())}">
        <on-render>
            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).addSubcontext(new net.shibboleth.idp.authn.context.ExternalAuthenticationContext(), true).setFlowExecutionUrl(flowExecutionUrl + '&amp;_eventId_proceed=1')" />
            <evaluate expression="externalContext.getNativeRequest().getSession().setAttribute('conversation' + flowExecutionContext.getKey().toString(), new net.shibboleth.idp.authn.impl.ExternalAuthenticationImpl(opensamlProfileRequestContext, calledAsExtendedFlow?:false))" />
        </on-render>
        <transition to="ValidateExternalAuthentication" />
    </view-state>
    
    <action-state id="ValidateExternalAuthentication">
        <evaluate expression="ValidateExternalAuthentication" />
        <evaluate expression="PopulateSubjectCanonicalizationContext" />
        <evaluate expression="'proceed'" />

        <transition on="proceed" to="CallSubjectCanonicalization" />
    </action-state>

    <!-- Check whether identities exist locally -->
    <action-state id="SearchExistingIdentities">
        <evaluate expression="environment" result="viewScope.environment" />
        <evaluate expression="opensamlProfileRequestContext" result="viewScope.profileRequestContext" />
        <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext))"
                      result="viewScope.authenticationContext" />
        <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="viewScope.encoder" />
        <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="viewScope.request" />
        <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="viewScope.response" />
        <evaluate expression="SearchExistingIdentities"/>

        <!-- How many matching identities found? -->
        <transition on="none" to="CallSubjectCanonicalization" />
        <transition on="one" to="CallSubjectCanonicalization" />
        <transition on="many" to="displayChooseIdentityForm" />
        <!-- Proceed and terminate current subflow -->
        <transition to="proceed" />
    </action-state>

   <!-- Display form to choose linked identity view -->
    <view-state id="displayChooseIdentityForm" view="chooseId">
        <on-entry>
            <evaluate expression="initializeU2fRequest"/>
        </on-entry>
        <transition on="proceed" to="CallSubjectCanonicalization"/>
    </view-state>

    <!-- Perform form processing -->
    <action-state id="processIdChoiceResponse">
        <evaluate expression="processIdChoiceResponse"/>
        <evaluate expression="'proceed'"/>
        <transition on="proceed" to="CallSubjectCanonicalization"/>
    </action-state>

    <!-- Perform Identity Choice validation -->
    <!--
    <action-state id="validateIdResponse">
        <evaluate expression="validateIdResponse"/>
        <evaluate expression="'proceed'"/>
        <transition on="AccountError" to="displayU2fForm"/>
        <transition on="InvalidCredentials" to="displayU2fForm"/>
        <transition on="NoCredentials" to="displayU2fForm" />
        <transition on="proceed" to="proceed"/>
    </action-state>
    -->


    <subflow-state id="CallSubjectCanonicalization" subflow="c14n">
        <input name="calledAsSubflow" value="true" />
        <transition on="proceed" to="proceed" />
        
        <!-- This shouldn't generally happen, but if c14n fails, it's allowable to fall through. -->
        <transition on="SubjectCanonicalizationError" to="ReselectFlow" />
    </subflow-state>

    <bean-import resource="X509External-beans.xml" />

</flow>
